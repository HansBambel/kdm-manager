#!/usr/bin/env python

#   standard
from bson.objectid import ObjectId
import cgi, cgitb
from datetime import datetime

#   custom
import assets
import html
from utils import load_settings, get_logger, mdb, ymd


if __name__ == "__main__":
    settings = load_settings()
    p_settings = load_settings("private")

    logger = get_logger()

    if settings.getboolean("application","DEBUG"):
        cgitb.enable()

    params = cgi.FieldStorage()
    headers = None
    output = str(params)

    # validate the params, bail if we're missing one
    for req_var in ["admin_key","u_id"]:
        if not req_var in params:
            output = "Missing required parameter '%s'!" % req_var
            html.render(output)

    # check for the correct key; bail if we don't have it
    if params["admin_key"].value != p_settings.get("admin","admin_key"):
        output = "Invalid administrator credential."
        html.render(output)

	# check the _id for the requested user; bail if we have a problem
    try:
        u_id = ObjectId(params["u_id"].value)
    except:
        output = "Invalid user _id value."
        html.render(output)

    if mdb.users.find_one({"_id": u_id}) is None:
        output = "User _id value not found."
        html.render(output)

	# see if we've got a custom export format in our request
    export_type = "pickle"
    if "export_type" in params:
        export_type = params["export_type"].value

	# autobots: roll out!
    user_object = assets.User(user_id=u_id, session_object={"login": "ADMINISTRATOR", "_id": 0})
    filename = "%s_%s.kdm-manager_export.%s" % (datetime.now().strftime(ymd), user_object.user["login"], export_type.lower())
    payload = user_object.dump_assets(dump_type=export_type)
    headers = html.meta.basic_file_header % filename
    html.render(str(payload), http_headers = headers)
